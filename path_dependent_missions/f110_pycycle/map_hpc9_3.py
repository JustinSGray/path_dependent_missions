import numpy as np

from pycycle.maps.map_data import MapData


"""Python version of msfan3_3 fan map from NPSS"""
HPCMap = MapData()

# Map design point values
HPCMap.defaults = {}
HPCMap.defaults['alphaMap'] = 0.0
HPCMap.defaults['NcMap'] = 1.0
HPCMap.defaults['PR'] = 9.3
HPCMap.defaults['RlineMap'] = 2.00
HPCMap.defaults['effDes'] = 0.851
RlineStall = 1.0

HPCMap.alphaMap = np.array([0.000, 90.000])
HPCMap.NcMap = np.array([0.400, 0.500, 0.600, 0.700, 0.800, 0.900, 0.950, 1.000, 1.050, 1.100])
HPCMap.RlineMap = np.array([1.000, 1.200, 1.400, 1.600, 1.800, 2.000, 2.200, 2.400, 2.600])

HPCMap.WcMap = np.array([
  # alpha = 0.
  [[3.278,    3.470,    3.656,    3.834,    4.004,    4.167,
    4.321,    4.467,    4.604],
  [4.457,    4.687,    4.903,    5.105,    5.293,    5.465,
    5.623,    5.766,    5.895],
  [6.137,    6.334,    6.515,    6.682,    6.833,    6.969,
    7.090,    7.196,    7.287],
  [8.080,    8.271,    8.443,    8.595,    8.728,    8.842,
    8.938,    9.017,    9.078],
  [11.324,   11.568,   11.780,   11.960,   12.111,   12.231,
   12.323,   12.388,   12.427],
  [18.702,   19.249,   19.705,   20.074,   20.357,   20.559,
   20.684,   20.735,   20.737],
  [23.752,   24.269,   24.699,   25.046,   25.311,   25.499,
   25.614,   25.658,   25.659],
  [29.110,   29.361,   29.574,   29.751,   29.893,   30.000,
   30.074,   30.116,   30.128],
  [31.247,   31.355,   31.450,   31.530,   31.596,   31.649,
   31.688,   31.715,   31.729],
  [32.014,   32.072,   32.122,   32.165,   32.200,   32.229,
   32.250,   32.264,   32.272]],

  # alpha = 90.
  [[5.889,    6.169,    6.424,    6.652,    6.855,    7.033,
    7.185,    7.312,    7.416],
  [8.999,    9.374,    9.698,    9.970,   10.192,   10.366,
   10.494,   10.577,   10.618],
  [11.642,   11.944,   12.204,   12.423,   12.601,   12.742,
   12.845,   12.912,   12.946],
  [14.405,   14.697,   14.949,   15.160,   15.334,   15.469,
   15.569,   15.634,   15.666],
  [18.141,   18.491,   18.788,   19.036,   19.233,   19.384,
   19.488,   19.550,   19.569],
  [23.310,   23.954,   24.485,   24.908,   25.227,   25.445,
   25.570,   25.605,   25.605 ],
  [26.021,   26.569,   27.022,   27.385,   27.659,   27.850,
   27.960,   27.995,   27.995],
  [29.313,   29.579,   29.778,   29.912,   29.984,   30.000,
   30.000,   30.000,   30.000],
  [31.247,   31.355,   31.450,   31.530,   31.596,   31.649,
   31.688,   31.715,   31.729],
  [32.014,   32.072,   32.122,   32.165,   32.200,   32.229,
   32.250,   32.264,   32.272]]
  ])

HPCMap.effMap = np.array([
  # alpha = 0
  [[.6731, .6934, .7067, .7118, .7066, .6886, .6507,
    .5831, .4761],
  [.6814, .7036, .7188, .7258, .7226, .7071, .6723,
   .6089, .5083],
  [.7158, .7298, .7388, .7421, .7386, .7273, .7045,
   .6654, .6068],
  [.7388, .7511, .7591, .7623, .7600, .7514, .7337,
   .7034, .6586],
  [.7655, .7804, .7909, .7966, .7967, .7906, .7754,
   .7477, .7057 ],
  [.7826, .8113, .8338, .8491, .8564, .8544, .8387,
   .8038, .7465],
  [.8056, .8290, .8472, .8595, .8653, .8638, .8517,
   .8253, .7826],
  [.8333, .8420, .8483, .8520, .8530, .8510, .8450,
   .8338, .8169],
  [.8200, .8222, .8234, .8235, .8226, .8205, .8170,
   .8115, .8041],
  [.7981, .7984, .7982, .7974, .7961, .7941, .7913,
   .7875, .7826]],

  # alpha = 90
  [[.6891, .7141, .7321, .7417, .7411, .7282, .6962,
    .6361, .5398],
  [.7100, .7391, .7610, .7745, .7779, .7693, .7420,
   .6877, .5995],
  [.7587, .7780, .7922, .8006, .8023, .7962, .7789,
   .7458, .6942],
  [.7897, .8062, .8183, .8257, .8276, .8235, .8105,
   .7856, .7471],
  [.8076, .8254, .8389, .8475, .8508, .8480, .8366,
   .8136, .7773],
  [.7874, .8172, .8406, .8568, .8648, .8637, .8490,
   .8156, .7605],
  [.7993, .8227, .8408, .8531, .8588, .8571, .8450,
   .8187, .7762],
  [.8333, .8420, .8483, .8520, .8530, .8510, .8450,
   .8338, .8169],
  [.8200, .8222, .8234, .8235, .8226, .8205, .8170,
   .8115, .8041],
  [.7981, .7984, .7982, .7974, .7961, .7941, .7913,
   .7875, .7826]]
  ])

HPCMap.PRmap = np.array([
  # alpha = 0
  [[1.3725,  1.3602,  1.3429,  1.3207,  1.2937,  1.2622,  1.2251,
    1.1813,  1.1315],
  [1.6499,  1.6306,  1.6019,  1.5643,  1.5180,  1.4638,  1.3999,
   1.3249,  1.2403],
  [2.0580,  2.0234,  1.9786,  1.9241,  1.8606,  1.7887,  1.7066,
   1.6129,  1.5092],
  [2.6967,  2.6432,  2.5756,  2.4945,  2.4011,  2.2964,  2.1780,
   2.0440,  1.8971],
  [3.8276,  3.7494,  3.6446,  3.5151,  3.3627,  3.1899,  2.9927,
   2.7685,  2.5230],
  [6.7288,  6.6896,  6.5504,  6.3158,  5.9932,  5.5931,  5.1045,
   4.5256,  3.8863],
  [8.8146,  8.7396,  8.5522,  8.2575,  7.8638,  7.3820,  6.7981,
   6.1079,  5.3418],
  [10.8289, 10.6278, 10.3710, 10.0616,  9.7032,  9.3000,  8.8419,
   8.3216,  7.7489],
  [11.5357, 11.3125, 11.0678, 10.8026, 10.5182, 10.2159,  9.8906,
   9.5378,  9.1603],
  [11.7842, 11.5735, 11.3514, 11.1184, 10.8752, 10.6223, 10.3566,
   10.0753,  9.7796]],

  # alpha = 90
  [[2.1099,  2.0825,  2.0372,  1.9750,  1.8969,  1.8046,  1.6950,
    1.5667,  1.4234],
  [3.2852,  3.2475,  3.1672,  3.0466,  2.8892,  2.6994,  2.4724,
   2.2070,  1.9153],
  [4.0060,  3.9338,  3.8256,  3.6837,  3.5108,  3.3105,  3.0777,
   2.8102,  2.5165],
  [4.8507,  4.7604,  4.6321,  4.4682,  4.2714,  4.0454,  3.7844,
   3.4853,  3.1565],
  [6.2086,  6.1065,  5.9499,  5.7419,  5.4865,  5.1887,  4.8407,
   4.4384,  3.9944],
  [8.7741,  8.7659,  8.6123,  8.3188,  7.8958,  7.3584,  6.6911,
   5.8929,  5.0090],
  [9.8873,  9.8172,  9.6146,  9.2853,  8.8391,  8.2889,  7.6185,
   6.8237,  5.9411],
  [10.8289, 10.6278, 10.3710, 10.0616,  9.7032,  9.3000,  8.8419,
   8.3216,  7.7489],
  [11.5357, 11.3125, 11.0678, 10.8026, 10.5182, 10.2159,  9.8906,
   9.5378,  9.1603],
  [11.7842, 11.5735, 11.3514, 11.1184, 10.8752, 10.6223, 10.3566,
   10.0753,  9.7796]]
])

#HPCMap.Nc_data, HPCMap.alpha_data, HPCMap.Rline_data = np.meshgrid(HPCMap.Nc_vals, HPCMap.alpha_vals, HPCMap.Rline_vals, sparse=False)
HPCMap.Npts = HPCMap.NcMap.size

HPCMap.units = {}
HPCMap.units['NcMap'] = 'rpm'
HPCMap.units['WcMap'] = 'lbm/s'


# format for new regular grid interpolator:

HPCMap.param_data = []
HPCMap.output_data = []

HPCMap.param_data.append({'name': 'alphaMap', 'values': HPCMap.alphaMap,
                          'default': 0, 'units': None})
HPCMap.param_data.append({'name': 'NcMap', 'values': HPCMap.NcMap,
                          'default': 1.0, 'units': 'rpm'})
HPCMap.param_data.append({'name': 'RlineMap', 'values': HPCMap.RlineMap,
                          'default': 2.0, 'units': None})

HPCMap.output_data.append({'name': 'WcMap', 'values': HPCMap.WcMap,
                           'default': np.mean(HPCMap.WcMap), 'units': 'lbm/s'})
HPCMap.output_data.append({'name': 'effMap', 'values': HPCMap.effMap,
                           'default': np.mean(HPCMap.effMap), 'units': None})
HPCMap.output_data.append({'name': 'PRmap', 'values': HPCMap.PRmap,
                           'default': HPCMap.PRmap, 'units': None})
