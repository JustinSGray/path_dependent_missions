import numpy as np

from pycycle.maps.map_data import MapData


"""Python version of msfan3_3 fan map from NPSS"""
FanMap = MapData()

# Map design point values
FanMap.defaults = {}
FanMap.defaults['alphaMap'] = 0.0
FanMap.defaults['NcMap'] = 1.0
FanMap.defaults['PR'] = 3.3
FanMap.defaults['RlineMap'] = 2.00
RlineStall = 1.0

FanMap.alphaMap = np.array([0.000, 90.000])
FanMap.NcMap = np.array([0.400, 0.500, 0.600, 0.700, 0.800, 0.900, 0.950, 1.000, 1.050, 1.100])
FanMap.RlineMap = np.array([1.000, 1.200, 1.400, 1.600, 1.800, 2.000, 2.200, 2.400, 2.600])

FanMap.WcMap = np.array([
  # alpha = 0.
  [[5.929,    6.562,    7.174,    7.763,    8.328,    8.866,
    9.378,    9.862,   10.317],
  [8.176,    8.853,    9.495,   10.101,   10.670,   11.201,
   11.693,   12.144,   12.556],
  [10.456,   11.200,   11.890,   12.523,   13.099,   13.617,
   14.077,   14.479,   14.824],
  [12.911,   13.755,   14.510,   15.176,   15.753,   16.241,
   16.642,   16.959,   17.194],
  [16.180,   17.144,   17.969,   18.653,   19.200,   19.615,
   19.904,   20.074,   20.133],
  [21.567,   22.428,   23.124,   23.661,   24.046,   24.286,
   24.391,   24.398,   24.398],
  [25.381,   26.000,   26.486,   26.844,   27.081,   27.203,
   27.225,   27.225,   27.225],
  [29.313,   29.579,   29.778,   29.912,   29.984,   30.000,
   30.000,   30.000,   30.000],
  [30.535,   30.639,   30.705,   30.735,   30.737,   30.737,
   30.737,   30.737,   30.737],
  [31.405,   31.413,   31.413,   31.413,   31.413,   31.413,
   31.413,   31.413,   31.413]],

  # alpha = 90.
  [[7.605,    8.375,    9.104,    9.791,   10.433,   11.029,
   11.578,   12.078,   12.529],
  [10.681,   11.481,   12.217,   12.888,   13.492,   14.029,
   14.499,   14.903,   15.242],
  [14.163,   15.026,   15.788,   16.447,   17.004,   17.460,
   17.820,   18.086,   18.263],
  [19.047,   20.051,   20.880,   21.538,   22.030,   22.364,
   22.550,   22.601,   22.601],
  [21.320,   22.418,   23.296,   23.962,   24.425,   24.697,
   24.793,   24.793,   24.793],
  [24.781,   25.662,   26.348,   26.846,   27.167,   27.322,
   27.341,   27.341,   27.341],
  [26.878,   27.481,   27.945,   28.274,   28.477,   28.561,
   28.565,   28.565,   28.565],
  [29.313,   29.579,   29.778,   29.912,   29.984,   30.000,
   30.000,   30.000,   30.000],
  [30.535,   30.639,   30.705,   30.735,   30.737,   30.737,
   30.737,   30.737,   30.73],
  [31.405,   31.413,   31.413,   31.413,   31.413,   31.413,
   31.413,   31.413,   31.413]]
  ])

FanMap.effMap = np.array([
  # alpha = 0
  [[.7175, .7633, .8006, .8269, .8385, .8298, .7901,
    .7017, .5350],
  [.7376, .7811, .8166, .8418, .8535, .8472, .8142,
    .7408, .6061],
  [.7408, .7860, .8231, .8498, .8630, .8584, .8274,
    .7570, .6277],
  [.7321, .7818, .8228, .8528, .8685, .8653, .8341,
    .7612, .6258],
  [.7228, .7764, .8207, .8534, .8712, .8695, .8396,
    .7682, .6369],
  [.7530, .7969, .8325, .8581, .8716, .8700, .8479,
   .7980, .7115],
  [.7872, .8184, .8431, .8603, .8685, .8661, .8500,
   .8164, .7611],
  [.8214, .8356, .8460, .8524, .8543, .8510, .8416,
   .8247, .7994],
  [.8107, .8178, .8224, .8244, .8235, .8195, .8117,
   .7997, .7828],
  [.7715, .7730, .7731, .7719, .7692, .7649, .7589,
   .7509, .7407]],

  # alpha = 90
  [[.7083, .7608, .8043, .8359, .8518, .8459, .8064,
    .7135, .5343],
  [.7304, .7792, .8195, .8489, .8639, .8597, .8269,
   .7507, .6084],
  [.7331, .7829, .8240, .8540, .8699, .8671, .8371,
   .7669, .6376],
  [.7276, .7799, .8229, .8545, .8718, .8706, .8436,
   .7798, .6651],
  [.7196, .7741, .8189, .8519, .8700, .8694, .8426,
   .7790, .6651],
  [.7514, .7944, .8292, .8541, .8671, .8654, .8444,
   .7973, .7167],
  [.7836, .8137, .8375, .8538, .8614, .8586, .8427,
   .8099, .7564],
  [.8214, .8356, .8460, .8524, .8543, .8510, .8416,
   .8247, .7994],
  [.8107, .8178, .8224, .8244, .8235, .8195, .8117,
   .7997, .7828],
  [.7715, .7730, .7731, .7719, .7692, .7649, .7589,
   .7509, .7407]]
  ])

FanMap.PRmap = np.array([
  # alpha = 0
  [[1.2392,  1.2346,  1.2248,  1.2101,  1.1905,  1.1662,  1.1371,
    1.1032,  1.0647],
  [1.3794,  1.3719,  1.3569,  1.3347,  1.3054,  1.2694,  1.2266,
   1.1770,  1.1214],
  [1.5656,  1.5562,  1.5350,  1.5025,  1.4590,  1.4053,  1.3416,
   1.2681,  1.1862],
  [1.8170,  1.8091,  1.7817,  1.7354,  1.6714,  1.5910,  1.4949,
   1.3843,  1.2621],
  [2.2149,  2.2163,  2.1845,  2.1206,  2.0266,  1.9055,  1.7590,
   1.5904,  1.4058],
  [2.8873,  2.8815,  2.8328,  2.7427,  2.6143,  2.4515,  2.2569,
   2.0345,  1.7927],
  [3.3633,  3.3295,  3.2578,  3.1500,  3.0087,  2.8376,  2.6382,
   2.4136,  2.1703],
  [3.8693,  3.7957,  3.7006,  3.5853,  3.4512,  3.3000,  3.1322,
   2.9486,  2.7520],
  [4.0332,  3.9463,  3.8459,  3.7328,  3.6079,  3.4722,  3.3258,
   3.1690,  3.0032],
  [4.1547,  4.0696,  3.9778,  3.8797,  3.7757,  3.6662,  3.5511,
   3.4304,  3.3047]],

  # alpha = 90
  [[1.3687,  1.3648,  1.3518,  1.3299,  1.2994,  1.2608,  1.2139,
    1.1589,  1.0967],
  [1.6016,  1.5941,  1.5729,  1.5382,  1.4908,  1.4316,  1.3607,
   1.2786,  1.1871],
  [1.9488,  1.9415,  1.9111,  1.8585,  1.7850,  1.6925,  1.5818,
   1.4546,  1.3145],
  [2.5922,  2.6002,  2.5644,  2.4863,  2.3685,  2.2155,  2.0298,
   1.8163,  1.5836],
  [2.9255,  2.9501,  2.9173,  2.8286,  2.6876,  2.5001,  2.2705,
   2.0057,  1.7184],
  [3.3808,  3.3806,  3.3250,  3.2160,  3.0573,  2.8546,  2.6115,
   2.3341,  2.0335],
  [3.6271,  3.5896,  3.5101,  3.3907,  3.2344,  3.0451,  2.8250,
   2.5775,  2.3098],
  [3.8693,  3.7957,  3.7006,  3.5853,  3.4512,  3.3000,  3.1322,
   2.9486,  2.7520],
  [4.0332,  3.9463,  3.8459,  3.7328,  3.6079,  3.4722,  3.3258,
   3.1690,  3.0032],
  [4.1547,  4.0696,  3.9778,  3.8797,  3.7757,  3.6662,  3.5511,
   3.4304,  3.3047]]
])

#FanMap.Nc_data, FanMap.alpha_data, FanMap.Rline_data = np.meshgrid(FanMap.Nc_vals, FanMap.alpha_vals, FanMap.Rline_vals, sparse=False)
FanMap.Npts = FanMap.NcMap.size

FanMap.units = {}
FanMap.units['NcMap'] = 'rpm'
FanMap.units['WcMap'] = 'lbm/s'


# format for new regular grid interpolator:

FanMap.param_data = []
FanMap.output_data = []

FanMap.param_data.append({'name': 'alphaMap', 'values': FanMap.alphaMap,
                          'default': 0, 'units': None})
FanMap.param_data.append({'name': 'NcMap', 'values': FanMap.NcMap,
                          'default': 1.0, 'units': 'rpm'})
FanMap.param_data.append({'name': 'RlineMap', 'values': FanMap.RlineMap,
                          'default': 2.0, 'units': None})

FanMap.output_data.append({'name': 'WcMap', 'values': FanMap.WcMap,
                           'default': np.mean(FanMap.WcMap), 'units': 'lbm/s'})
FanMap.output_data.append({'name': 'effMap', 'values': FanMap.effMap,
                           'default': np.mean(FanMap.effMap), 'units': None})
FanMap.output_data.append({'name': 'PRmap', 'values': FanMap.PRmap,
                           'default': FanMap.PRmap, 'units': None})
